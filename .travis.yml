dist: trusty
sudo: required

services:
  - docker

language: node_js

node_js:
  - "8"
  - "6"

env:
  global:
    - NODE_ENV=test
    - DEEPSTREAMIO_SERVER_GITURL=https://github.com/deepstreamIO/deepstream.io.git
    - SELENIUM_NET=172.17.0.0
    - SELENIUM_HUB_IP=172.17.0.2
    - TEST_PAGE_HOST=172.17.0.1 # required for ci:e2e:test-page
    - DEEPSTREAM_HOST=172.17.0.1
    - STACK_STARTUP_TIMEOUT=30 # in seconds, the time required for deepstream server and selenium grid to go up

before_script:
  - docker run -d -p 4444:4444 --name selenium-hub selenium/hub:3.8.1-aluminum
  - docker run -d --link selenium-hub:hub selenium/node-chrome:3.8.1-aluminum
  - docker run -d --link selenium-hub:hub selenium/node-firefox:3.8.1-aluminum
  - mkdir deepstream.io && cd deepstream.io
  - git clone $DEEPSTREAMIO_SERVER_GITURL ./
  - git submodule update --init --recursive
  - npm install && npm run tsc && cd ..
  - sudo chmod +x ./deepstream.io/dist/bin/deepstream
  - (./deepstream.io/dist/bin/deepstream start --host $DEEPSTREAM_HOST --http-port 3030 > /dev/null 2>&1) & # providing http port to avoid port conflict with test page (uses 8080)
  - sleep $STACK_STARTUP_TIMEOUT
  - wget -O- http://$SELENIUM_HUB_IP:4444/grid/console
  - wget -O- http://$DEEPSTREAM_HOST:3030/health-check

script:
  - if [ "$TRAVIS_NODE_VERSION" ~= "8" ]; then
      npm run lint;
    fi
  - npm run test:coverage
  - npm run build
  - npm --prefix ./test-page run start:silent -- --host $TEST_PAGE_HOST &
  - sleep 20
  - wget -O- http://$TEST_PAGE_HOST:8080
  - npm --prefix ./test-page/test/selenium run chrome-dev -- --use-docker

after_script: "cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"

notifications:
  email: false
